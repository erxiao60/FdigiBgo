/*
 *  $Id: DmpSimAlg.h, 2014-06-10 14:57:40 DAMPE $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 10/06/2014
 * Added GetAtt() by zhzhy 05/08/2014
*/

#ifndef DmpSimAlg_H
#define DmpSimAlg_H

#include "DmpVAlg.h"

class DmpSimRunManager;
class G4PhysListFactory;

class DmpSimAlg : public DmpVAlg{
/*
 *  DmpSimAlg
 *
 *
 */
public:
  DmpSimAlg();
  ~DmpSimAlg();

  void Set(const std::string &type,const std::string &argv);
  bool Initialize();
  bool ProcessThisEvent();
  bool Finalize();
  //Get MIPs parameters
  void GetMipPar();

private:
  DmpSimRunManager      *fSimRunMgr;    // run manager of simulation
  G4PhysListFactory     *fPhyFactory;
  std::string           fMacFile;
  std::string           fPhyListName;   // default is QGSP_BIC
  //long                  fEventID;

};
  //Get MIPs parameters
void DmpSimAlg::GetMipPar(){
  ifstream Mpar;
  Mpar.open("~/:Dampe/Calibration/MIPs/MIPsPar");
  if(!Mpar.good()){
    std::cout<<"Can open MIPs Par file!"<<endl;
    exit(1);
  } 
  int nGpmt=14*2*22;
  fo r(int i=0;i<nGpmt;i++){
    f or(int j=0;j<4;j++){
      Mpar>>MipPar[i][j];  
    }
  }
  Mpar.close();
}   

#endif
